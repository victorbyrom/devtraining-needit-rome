<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_fix">
    <sys_script_fix action="INSERT_OR_UPDATE">
        <before>false</before>
        <description/>
        <name>isIncidentEvenorOdd</name>
        <record_for_rollback>false</record_for_rollback>
        <script><![CDATA[//1. Put the ten incident numbers in an array.
//2. Loop through the array and if the array index is an odd number, print the Location display value to the console
//3. If the array index is zero or an even number, print the Caller ID display value.
//4. (hint: cast the incident numbers to a string before populating the array. Use the extremely rarely used Modulus operator to determine if the array index is even or odd.)

//Establishes a GlideRecord of the incidents table then sorts the updated by field in descending order.
var inactiveIncidents = new GlideRecord('incident');
//Establishes the limit of the queries processed. Default value and example is 10.
var numberofQueries = 10;
inactiveIncidents.setLimit(numberofQueries);
//Builds the encoded query for the active tag then executes said query
inactiveIncidents.addEncodedQuery(stateIN6,7);
inactiveIncidents.orderByDesc('sys_updated_on');
inactiveIncidents.query();


//Creates two arrays to pass incidences into, then takes properties of the current incident and stores them in the second array. -(Numbers)
var numbers = new Array();

while (inactiveIncidents.next()) {
    var obj = {
        number: inactiveIncidents.getValue('number'),
        caller_id: inactiveIncidents.getValue('caller_id'),
        location: inactiveIncidents.getValue('location')
    };
    numbers.push(obj);
}

    //This would also work
    // 		numbers.push({
    // 			number: inactiveIncidents.getValue('number'),
    // 			caller_id: inactiveIncidents.getValue('caller_id'),
    // 			location: inactiveIncidents.getValue('location')
    // 		});


// Starts a loop through the array, checks the array index, and sends an info message for Location if it's odd and Caller id if it's even.
for (i = 0; i < numbers.length; i++) {
    if (i % 2 === 0) {
        gs.info('The caller ID for: ' + numbers[i].number  + ' is ' + numbers[i].caller_id + '.');
    } else if (i % 2 !== 0) {
        gs.info('The location for ' + numbers[i].location + ' is: ' + numbers[i].location + '.');
    }
}

// Logic to determine if the number is odd or even, if even, calls the Caller ID Display value.
//Prints the number of each record processed
gs.info("Here's a list: " + numbers);]]></script>
        <sys_class_name>sys_script_fix</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2021-10-26 19:24:38</sys_created_on>
        <sys_id>0ffbcf331b1730107ae396c6b04bcb02</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>isIncidentEvenorOdd</sys_name>
        <sys_package display_value="NeedIt" source="x_58872_needit">6ead8e780f603200cd674f8ce1050ed1</sys_package>
        <sys_policy/>
        <sys_scope display_value="NeedIt">6ead8e780f603200cd674f8ce1050ed1</sys_scope>
        <sys_update_name>sys_script_fix_0ffbcf331b1730107ae396c6b04bcb02</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-10-26 19:25:28</sys_updated_on>
        <unloadable>false</unloadable>
    </sys_script_fix>
</record_update>
